---
layout: post
title: 启发式评估
author: gavinkwoe
date: !binary |-
  MjAwNi0xMi0yOSAwOTo1MDowMiArMDgwMA==
date_gmt: !binary |-
  MjAwNi0xMi0yOSAwMTo1MDowMiArMDgwMA==
---
<strong>什么是启发式评估？
</strong>启发式评估是专家评审法的一种，就是让几个评审人员根据一些通用的可用性原则和自己的经验来发现系统内潜在的可用性问题。每一个评审人员可以发现35%的可用性问题，而5个评审人员能找到大约75%的可用性问题。
<strong>启发式评估该选择由什么样的人来进行？</strong>
启发式评估是专家评审法的一种，选用具有可用性知识或选用具有和被测试系统相关专业知识的“专家”，具有以上两种知识的人是最合适人选，他能多发现约20%的可用性问题。
<strong>启发式评估如何进行？</strong>
每一个评审人员进行1-2小时的使用系统，之后提供一份独立的报告，在报告中应包括可用性问题的描述，问题的严重性以及改进的建议。
<strong>启发式评估的通用准则</strong>
 &bull;Visibility of system status.可视性原则
 &bull;Match between system and real world.系统应符合用户的真实世界
 &bull;User control and freedom.用户有自由控制权
 &bull;Consistency.一致性原则
 &bull;Error strategy.有预防用户出错的措施
 &bull;Recognition rather than recall.要在第一时间让用户看到
 &bull;Flexibility and efficiency of use.使用起来灵活且高效
 &bull;Aesthetics and minialist design.易读性
 &bull;Help users recognize, diagnose, and recover from errors.给用户明确的错误信息，并协助用户方便的从错误中恢复工作
&bull;Help and Documentation.必要的帮助提示与说明文档
<strong>附：普渡大学可用性测试检查表</strong>
使用说明：本调查表共有100题，回答每一个问题时按照以后三个步骤：
（a）请评估每一个问题是否适用于所评审的系统。如果不适用，跳到下一题。如果适用，请继续回答。
（b）对于所评估的系统，请评价该问题的重要性（1是最不重要的，3是最重要的）
（c）评价系统在该问题上的表现（1是非常糟糕，7是非常好），如果不存在，请选择不存在项
1.兼容性
 1）光标的控制是否符合光标的移动？
 2）用户控制的结果是否符合用户的期望？
 3）所提供的控制是否符合用户的技能水平？
 4）界面的编码（例如，颜色、形状等）是否为用户所熟悉？
 5）用词是否为用户所熟悉？
2.一致性
 6）界面颜色的编码是否符合常规？
 7）编码是否在不同的显示及菜单上都保持一致？
 8）光标的位置是否一致？
 9）显示的格式是否一致？
 10）反馈信息是否一致？
 11）数据字段的格式是否一致？
 12）标号的格式是否一致？
 13）标号的位置是否一致？
 14）标号本身是否一致？
 15）显示的方向是否一致？（漫游或卷动）
 16）系统要求的用户动作是否一致？
 17）在不同的显示中用词是否一致？
 18）数据显示和数据输入的要求是否一致？
 19）数据显示是否符合用户的常规？
 20）图形数据的符号是否符合标准？
 21）菜单的用词和命令语言是否一致？
 22）用词是否符合用户指导的原则？
3. 灵活性
 23）是否可以使用命令语言而绕过菜单的选择？
 24）系统是否有直接操作的功能？
 25）数据输入的设计是否灵活？
 26）用户是否可以灵活地控制显示？
 27）系统是否提供了灵活的流程控制？
 28）系统是否提供了灵活的用户指导？
 29）菜单选项是否前后相关？
 30）用户是否可以根据他们的需要来命名显示和界面单元？
 31）系统是否为不同的用户提供了好的训练？
 32）用户是否可以自己改变视窗？
 33）用户是否可以自己命名系统命令？
 34）系统是否允许用户选择需要显示的数据？
 35）系统是否可以提供用户指定的视窗？
 36）为了扩展显示功能，系统是否提供放大的功能？
4. 可学习性
 37）用词是否清晰？
 38）数据是否有合理的分类，易于学习？
 39）命令语言是否有层次？
 40）菜单的分组是否合理？
 41）菜单的顺利是否合理？
 42）命令的名字是否有意义？
 43）系统是否提供了无惩罚的学习？
5. 极少化的用户动作
 44）系统是否为相关的数据提供了组合输入的功能？
 45）必要的数据是否只需要输入一次？
 46）系统是否提供了默认值？
 47）视窗之间的切换是否容易？
 48）系统是否为经常使用的控制提供了功能键？
 49）系统是否有全局搜索和替代的功能？
 50）菜单的选择是否可以使用点击的功能？（主要的流程控制方法）
 51）菜单的选择是否可以使用键入的功能？（辅助的控制方法）
 52）系统是否要求极少的光标定位？
 53）在选择菜单时，系统是否要求极少的步骤？
 54）系统是否要求极少的用户控制动作？
 55）为了退到更高一级菜单中，系统是否只需要一个简单的键入动作？
 56）为了退到一般的菜单中，系统是否只需要一个简单的键入动作？
6. 极小的记忆负担
 57）系统是否使用了缩写？
 58）系统是否为输入分层次的数据提供了帮助？
 59）指导信息是否总是可以得到的？
 60）系统是否为序列的选择提供了分层次的菜单？
 61）被选的数据是否有突出显示？
 62）系统是否为命令提供了索引？
 63）系统是否为数据提供了索引？
 64）系统是否提示在菜单结构中的当前位置？
 65）数据是否保存简短？
 66）为选择菜单使用的字母代码是否经过认真的设计？
 67）是否将长的数据分成不同的部分？
 68）先前的答案是否可以简便的再利用？
 69）字母大小写是否等同？
 70）系统是否使用短的代码而不使用长的代码？
 71）图符是否有辅助性的字符标号？
7. 知觉的有限性
 72）系统是否为不同的数据类别提供不同的编码？
 73）缩写是否清晰而相互不同？
 74）光标是否不同？
 75）界面单元是否清晰？
 76）用户指导的格式是否清晰？
 77）命令是否有清晰的意义？
 78）命令的拼写是否清晰？
 79）系统是否使用了易于分辨的颜色？
 80）目前活动的窗口是否有清楚的标识？
 81）为了直接比较，数据是否成对的摆在一起？
 82）是否限制语音信息使用的数量?
 83）系统是否提供了一系列相关信息？
 84）菜单是否和其他的显示信息有明显的区别?
 85）颜色的编码是否多余？
 86）系统是否提供了视觉上清晰可辨的数据字段？
 87）不同组的信息是否明显分开？
 88）屏幕的密度是否合理？
8. 用户指导
 89）系统反馈的错误信息是否有用？
 90）系统是否提供了“取消”的功能？
 91）错误的输入是否被显示出来？
 92）系统是否提供了明确的改正错误的方法？
 93）系统是否为控件输入提供了反馈？
 94）是否提供了“帮助”
 95）一个过程的结束是否标志清楚？
 96）是否对重复的错误有提示？
 97）错误信息是否具有建设性并提供有用的信息？
 98）系统是否提供了“重新开始”的功能？
 99）系统是否提供了“撤销”的功能？
 100）用户是否启动流程控制？
转自:http://www.dtell.net/article.asp?id=37
